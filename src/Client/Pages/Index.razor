@page "/"
@inject Api api

<MudGrid>

    <MudItem xs="12" sm="5">

        <MudPaper Class="pa-4">

            <MudTextField T="string" Label="Email" Variant="Variant.Outlined" Class="mb-4" @bind-Value="Request.email" @ref="email" Immediate="true" />
            <MudTextField T="string" Label="Height (cm)" Variant="Variant.Outlined" Class="mb-4" @bind-Value="Request.height" @ref="height" Immediate="true" />

            <MudButton FullWidth="true" Variant="Variant.Filled" OnClick="HandleButtonPress" Color="Color.Tertiary" Disabled="processing" Style="height:3em">
                @if(!processing)
                {
                    <MudText>Send request</MudText>
                }
                else
                {
                    <MudProgressLinear Color="Color.Tertiary" Indeterminate="true" Rounded="true" Class="mx-2" />
                }
            </MudButton>

        </MudPaper>

    </MudItem>

    <MudItem xs="12" sm="7">

        <MudPaper Class="pa-4 mb-6">
            <MudText Typo="Typo.h6">Request</MudText>
            <MudDivider Class="my-4"></MudDivider>
            <MudElement HtmlTag="pre">@Request</MudElement>
        </MudPaper>

        <MudPaper Class="pa-4">
            <MudPaper Class="d-flex flex-row flex-grow-1 gap-4 justify-space-between align-center" Elevation="0">
                <MudText Typo="Typo.h6">Response</MudText>
                @if (Response is not null)
                {
                    <MudChip Variant="Variant.Outlined" Size="Size.Small" Color="@(Response.StatusCode == 200 ? Color.Success : Color.Warning)">
                        @Response.StatusCode.ToString()
                    </MudChip>
                }
            </MudPaper>
            <MudDivider Class="my-4"></MudDivider>
            <MudElement HtmlTag="pre">@(Response?.Error ?? "")</MudElement>
        </MudPaper>

    </MudItem>

</MudGrid>

@code{

    FormRequest Request = new();
    FormResponse Response;
    MudTextField<string> email;
    MudTextField<string> height;
    Dictionary<string, MudTextField<string>> inputs;
    bool processing = false;

    protected override void OnAfterRender(bool firstRender)
    {
        inputs = new() { [nameof(email)] = email, [nameof(height)] = height };
    }

    async Task HandleButtonPress()
    {
        processing = true;
        var delay = Task.Delay(700);
        var request = SendRequest();
        await Task.WhenAll(delay, request);
        processing = false;
    }

    async Task SendRequest()
    {
        ClearErrors();

        Response = await api.Send(Request);

        if (!Response.Success)
        {
            foreach (var parameter in Response.Error.invalidParameters)
            {
                var input = inputs[parameter.name];
                input.AddError(parameter.reason);
            }
        }
    }

    void ClearErrors()
    {
        foreach (var (name, input) in inputs)
        {
            input.ErrorText = null;
            input.Error = false;
        }
    }
}
